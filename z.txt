mujhe node js epress ja mai ek project bana hai jisme ek user hai samjho vo database mai sabse bada user hoga initial usko 25% diya jayega matlb samjho user hai vo 5 log ko refer ga and usse bhi jada kar sakta hai lekin 5 ke baad se uska jo 25% rakha hai vo 30% ho jayega aise he ye flow chalte rahega and ye percentage user ke hisab se decide honge jaise inital 25% fhir 5 par 30% 10 par 35% and jaise isne 5 log ya kitne bhi logo ko reffer kiya vo bhi aage kisi na kisi ko reffer kar sakte hai and or yaha disturubution waha seen aata hai samjho pahle user se start karte hai db ka first user hai usne do log ko reffer kiya usme koi ek ya dono ne kuch deposite kiya samjho ek ne kiya 100 and dusre ne kiya 200 to jo ye amount usne deposite kiya uska uske upper wale mai kitna percentage set hai utana uske upper wala lelega jaisa abhi user2 ne deposite kiya to usse amount ka 25% uske upper wala lelega ye percentage user ke reeffer par decide hoga and samjho aab nested ho gaya sab example samjho db ka user1 ne do reffer kiya  2 ko and 3 ko or user2 ne user4 ko reffer kiya to jitna vo deposite karega samjho 100 kiya to uske upper wale ko jitna percentage rahega utana cut ga fhir uske upper jitne hai utana vo bhi lenge user4 ka example user ne 100 deposite kiya to uske jo user hai user3 to usse milege jitna perctage hoga 25% ya jo bhi and uske upper wale user2 ko milge but samjho jo bhi hoga to usse aisa milga user4 ka amount jaise user3 ka tha 25% and user2 ka 30% to user4 mai se 30%-25% milega 


samjho aisa 
user8 deposite 100
user7 get 25% according uski percentage(30%,40%)
user6 iki jo bhi perctage ho iske neche wale yani user7 se kitna differnce hogi fhir aage badhegi agar differnec 0 aaya to kuch nahi lege or samjho user6 ka 30% hai to vo iske neche yani user7 ke percbatge se differnce karega 
example : user7 tha 30% or user6 ka tha 25% fhir differnce nikalega aaya 5%
fhir vo jo depsoite karega uska bacha hue mai se le lega user8 se
same user5 bhi same process lega and vo bhi user6 aise he propecess karega
aise he chalte rahega


hey isme thoda changes hai
console.log("JAI SHREE RAM JI / JAI BAJARANG BALI JI");
const express = require("express");
const mongoose = require("mongoose");
const User = require("./models/user.schema");

const app = express();
const port = 9080;

const MONGO_URL = "mongodb://localhost:27017/ramsir";

mongoose
  .connect(MONGO_URL, {})
  .then(() => console.log("MongoDB connected successfully"))
  .catch((err) => console.log("Error in MongoDB connection:", err));

app.use(express.json()); // Middleware to parse JSON requests

// Update referral percentages
const updateReferralPercentage = async (userId) => {
  try {
    const user = await User.findById(userId);
    if (!user) return;

    let referralsCount = user.referrals.length;

    if (referralsCount >= 10) user.referralPercentage = 35;
    else if (referralsCount >= 5) user.referralPercentage = 30;
    else user.referralPercentage = 25;

    await user.save();
  } catch (error) {
    console.error("Error updating referral percentage:", error);
  }
};

// Distribute commission
//! Old one Distribute commission
// const distributeCommission = async (userId, depositAmount) => {
//   try {
//     let user = await User.findById(userId).populate("referredBy");
//     if (!user || !user.referredBy) return;

//     // console.log(user, "user jo deposite kar raha hai");

//     let currentUser = user;
//     let prevPercentage = 0;

//     console.log(
//       currentUser.referredBy,
//       "Usko kisne refer kiya hai, uska parent ----------------------------            ---------------------------------"
//     );

//     while (currentUser.referredBy) {
//       let parentUser = await User.findById(currentUser.referredBy);
//       console.log(parentUser, "parentUser parentUser");
//       if (!parentUser) break; // Ensure parent exists

//       let commission = (depositAmount * parentUser.referralPercentage) / 100;
//       console.log(commission, "Commission calculated");
//       let netCommission = Math.max(
//         0,
//         commission - (depositAmount * prevPercentage) / 100
//       ); // Ensure non-negative
//       console.log(`User ${parentUser._id} gets commission: ${netCommission}`);
//       prevPercentage = parentUser.referralPercentage;
//       console.log(prevPercentage, "prevPercentage");

//       // Move to next parent
//       currentUser = parentUser;
//     }

//       // ✅ Add commission to parent user's deposit balance
//     //   parentUser.depositAmount = (parentUser.depositAmount || 0) + netCommission;

//   } catch (error) {
//     console.error("Error distributing commission:", error);
//   }
// };

// Deposit logic

const distributeCommission = async (userId, depositAmount) => {
  try {
    let user = await User.findById(userId).populate("referredBy");
    if (!user || !user.referredBy) return;

    let currentUser = user;
    let remainingAmount = depositAmount;
    let prevPercentage = 0;

    while (currentUser.referredBy) {
      let parentUser = await User.findById(currentUser.referredBy);
      if (!parentUser) break;

      let parentPercentage = parentUser.referralPercentage;
      let difference = Math.max(0, parentPercentage - prevPercentage);

      console.log(parentPercentage, difference);
      if (difference > 0) {
        let commission = (remainingAmount * difference) / 100;

        console.log(commission, "commission ");
        // parentUser.depositAmount = (parentUser.depositAmount || 0) + commission;
        // await parentUser.save();

        console.log(
          `User ${parentUser._id} gets commission: ₹${commission} (${difference}%)`
        );
        remainingAmount -= commission; // Jo amount bacha, usme se kata jayega
        break;
      }

      prevPercentage = parentPercentage;
      currentUser = parentUser;
    }
  } catch (error) {
    console.error("Error distributing commission:", error);
  }
};

app.post("/deposit", async (req, res) => {
  try {
    const { userId, amount } = req.body;
    if (!userId || !amount || amount <= 0) {
      return res
        .status(400)
        .json({ message: "Invalid deposit amount or user ID" });
    }

    let user = await User.findById(userId);
    if (!user) return res.status(404).json({ message: "User not found" });

    // user.depositAmount = (user.depositAmount || 0) + amount; // Ensure depositAmount is initialized
    await user.save();

    // Distribute commission
    await distributeCommission(userId, amount);

    res.json({ message: "Deposit successful", newBalance: user.depositAmount });
  } catch (error) {
    console.error("Error in deposit:", error);
    res.status(500).json({ message: "Internal server error" });
  }
});

// Register user
app.post("/register", async (req, res) => {
  try {
    const { name, email, referredById } = req.body;
    if (!name || !email) {
      return res.status(400).json({ message: "Name and email are required" });
    }

    let newUser = new User({ name, email, depositAmount: 0 });

    if (referredById) {
      let referrer = await User.findById(referredById);
      if (referrer) {
        newUser.referredBy = referrer._id;
        referrer.referrals.push(newUser._id);
        await referrer.save();
        await updateReferralPercentage(referrer._id);
      }
    }

    await newUser.save();
    res.json({ message: "User registered successfully", userId: newUser._id });
  } catch (error) {
    console.error("Error in registration:", error);
    res.status(500).json({ message: "Internal server error" });
  }
});

app.get("/", (req, res) => res.send("Hello World!"));

app.listen(port, () => console.log(`Server running on port ${port}!`));

samjho jo amount hai vo samjho ek percantage hai
and jab vo commision lega samjho uske upper wala hai
60% ya 30% 
o jo amount dega vo hoga 60 to percatge agar 60 raha to vo 60% kaat lega and kara 0 bacha to aag loop nahi cahelga 
and bacha jaise aapko bata

example 
user8 usne 60 diya
fhir uska parent user7 dekhe samjho uska percantge hai 60% tp pura nahi cut jayega
agar ye 50% hua to 60-50 jyeg and 
10 bacha 
fhir isme upper wala dekhe user6 